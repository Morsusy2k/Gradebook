@model Gradebook.PresentationLayer.WebApplication.Models.BasicModels.PupilModel
@using Gradebook.BusinessLogicLayer.Interfaces
@using Gradebook.BusinessLogicLayer.Managers
@{
    IPClassManager _classManager = new PClassManager();
    IEnumerable<PClassModel> classModels = _classManager.GetAll().Select(x => (PClassModel)x);
    var classList = new SelectList(classModels, "Id", "ClassName");
}

@if (TempData.ContainsKey("PupilError"))
{<div class="main-warning"> @Html.Raw(TempData["PupilError"])</div>}

@using (Html.BeginForm("AddPupil", "Pcp", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="main-class-info">
        <div>New pupil</div>
        @if (Request.UrlReferrer != null)
        {
            <a onclick="history.go(-1); return false;" href="#"><div class="main-back"><i class="zmdi zmdi-arrow-left zmdi-hc-2x"></i></div></a>
        }
        else
        {
            <a href="#"><div class="main-back"><i class="zmdi zmdi-arrow-left zmdi-hc-2x"></i></div></a>
        }
    </div>
        <div class="main-table-container">
            <div class="main-table-row main-table-subheader">
                <div style="width:50%;">
                    Pupil name
                </div>
                <div>
                    Class
                </div>
            </div>
            <div class="main-table-row">
                <div>
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "main-newpupil-name" } })
                </div>
                <div>
                    @Html.DropDownListFor(x => x.PClassId, classList, new { @class = "main-newpupil-name" })
                </div>
            </div>
        </div>
        <button class="btn btn-primary btn-block">Add pupil</button>
}