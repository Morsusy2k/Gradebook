@model Gradebook.PresentationLayer.WebApplication.Models.ComplexModels.PupilDetailsModel
@using Gradebook.PresentationLayer.WebApplication.Models.BasicModels
@using Gradebook.PresentationLayer.WebApplication.Models.ComplexModels
@using Gradebook.BusinessLogicLayer.Managers
@using Gradebook.BusinessLogicLayer.Interfaces

<div class="main-details-info">
    @{
        IUserManager _userManager = new UserManager();
        IMarkManager _markManager = new MarkManager();
        IMarksManager _marksManager = new MarksManager();

        UserModel teacher = _userManager.GetById(Model.Pclass.UserId);

        <div>@Model.Pupil.Name </div>
        <div>@Model.Pclass.ClassName</div>
        <div>(@teacher.FullName)</div>
        if (Request.UrlReferrer != null)
        {
            <a onclick="history.go(-1); return false;" href="#"><div class="main-back"><i class="zmdi zmdi-arrow-left zmdi-hc-2x"></i></div></a>
        }
        else
        {
            <a href="#"><div class="main-back"><i class="zmdi zmdi-arrow-left zmdi-hc-2x"></i></div></a>
        }
    }
</div>
@foreach (SubjectModel subject in Model.Subjects)
{
    MarksDetailsModel details = new MarksDetailsModel();
    details.Pupil = Model.Pupil;
    details.Subject = subject;
    details.Professor = _userManager.GetById(details.Subject.UserId);
    MarksModel marks = _marksManager.GetByPupilId(Model.Pupil.Id).Select(x => (MarksModel)x).FirstOrDefault(x => x.SubjectId == subject.Id);
    details.Marks = marks;
    if (marks != null)
    {
        details.Grades = _markManager.GetByMarksId(marks.Id).Select(x => (MarkModel)x);
    }

    Html.RenderPartial("Partial/_PartialPupil", details);
}